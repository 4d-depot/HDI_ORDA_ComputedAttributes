<?xml version="1.0" encoding="UTF-8" standalone="no" ?><xliff version="1.0" xmlns:d4="http://www.4d.com/d4-ns">  <file datatype="plaintext" original="Undefined" source-language="en" target-language="en">    <header>      <prop-group name="Xliff-Editor.4dbase">        <prop prop-type="version">2.0</prop>      </prop-group>    </header>    <body>      <group resname="HELP">        <trans-unit id="EPG+08zI/UeO5W2z/XKtuQ" resname="TIP_SelectPerson">          <source>SELECT ONE PERSON TO DISPLAY THEIR FAMILY MEMBERS</source>          <target>SELECT ONE PERSON TO DISPLAY THEIR FAMILY MEMBERS</target>        </trans-unit>        <trans-unit id="kJOCwQIlgCi1Ozl8T6Sr9g" resname="Help_Fullname">          <source>The fullname attribute is assembled using the person's first and last name. It is followed by the age in brackets if the person is deceased.This calculation is done in the "peopleEntity" class via the "get fullname" function which is called as soon as the attribute is invoked.</source>          <target>The fullname attribute is assembled using the person's first and last name. It is followed by the age in brackets if the person is deceased.This calculation is done in the "peopleEntity" class via the "get fullname" function which is called as soon as the attribute is invoked.</target>        </trans-unit>        <trans-unit id="uu5OZp9Q5TERKc9DZREQQQ" resname="Help_Portrait">          <source>A calculated attribute can also be of type image.Here the picture colors vary according to the person's age.Full colors for children and parents, black and white or sepia for ancestors!</source>          <target>A calculated attribute can also be of type image.Here the picture colors vary according to the person's age.Full colors for children and parents, black and white or sepia for ancestors!</target>        </trans-unit>        <trans-unit id="qBk4TZAZXNd/1wy3H2JszQ" resname="Help_Age">          <source>The calculated attribute "age" is based on the person's date of birth.This calculation is done in the "peopleEntity" class via the get age function which is called as soon as the attribute is needed.</source>          <target>The calculated attribute "age" is based on the person's date of birth.This calculation is done in the "peopleEntity" class via the get age function which is called as soon as the attribute is needed.</target>        </trans-unit>        <trans-unit id="cTShrrdt0oyFSqtGKmkXPA" resname="Help_OrderBy">          <source>When a sort is done, via the interface or by programming, the "orderBy genderSymbol", "orderBy fullname" and "orderBy age" functions of the class are called (if they exist) in order to optimize the sorting.In this case, we understand the interest of having created, beforehand, a composite index "firstname + lastname" or "lastname + firstname" for sorting by full name, and to have an index for the gender and the date of birth!</source>          <target>When a sort is done, via the interface or by programming, the "orderBy genderSymbol", "orderBy fullname" and "orderBy age" functions of the class are called (if they exist) in order to optimize the sorting.In this case, we understand the interest of having created, beforehand, a composite index "firstname + lastname" or "lastname + firstname" for sorting by full name, and to have an index for the gender and the date of birth!</target>        </trans-unit>        <trans-unit id="kbC4I1lVO6nzoD95AaXVHw" resname="Help_QueryName">          <source>When a search is performed based on the "fullname" attribute, the "query fullname" function of the "peopleEntity" class is called (if it exists) in order to optimize or even personalize the search.Ex: if you search for "pa te", you can decide that the first name starts with "pa" and the last name with "te" or the opposite... or both!</source>          <target>When a search is performed based on the "fullname" attribute, the "query fullname" function of the "peopleEntity" class is called (if it exists) in order to optimize or even personalize the search.Ex: if you search for "pa te", you can decide that the first name starts with "pa" and the last name with "te" or the opposite... or both!</target>        </trans-unit>        <trans-unit id="AqJovZKJEFsLmQQJI3YO4g" resname="Help_QueryAge">          <source>When a search is performed based on the "age" attribute, the "query age" function of the "peopleEntity" class is called (if it exists) to optimize the search.The "birthday" attribute being indexed, it is indeed much faster to perform the search via this attribute.</source>          <target>When a search is performed based on the "age" attribute, the "query age" function of the "peopleEntity" class is called (if it exists) to optimize the search.The "birthday" attribute being indexed, it is indeed much faster to perform the search via this attribute.</target>        </trans-unit>        <trans-unit id="RYg2D4jbR/fViwK95z6EyQ" resname="Help_ObjectAttribute">          <source>A calculated attribute can also be of type Object!It is the case with the attribute "fullAddress", which is calculated from several other attributes including "fullname", which is itself a calculated attribute!</source>          <target>A calculated attribute can also be of type Object!It is the case with the attribute "fullAddress", which is calculated from several other attributes including "fullname", which is itself a calculated attribute!</target>        </trans-unit>        <trans-unit id="+yo49dhnPKAnZETsDexjzA" resname="Help_EntitySelection">          <source>A calculated attribute can also be a selection of entities!We can thus have, in a genealogy database, attributes such as "parents", "grandparents", "siblings", "childrens", etc. which can in turn be used as datasources for list boxes for example.All of this without any additional code in the form!</source>          <target>A calculated attribute can also be a selection of entities!We can thus have, in a genealogy database, attributes such as "parents", "grandparents", "siblings", "childrens", etc. which can in turn be used as datasources for list boxes for example.All of this without any additional code in the form!</target>        </trans-unit>        <trans-unit id="sO3dgpjqzeLf1RC+k9E5VQ" resname="Help_GenderIcon">          <source>The icon is in fact a Unicode character which is returned according to the gender. A sorting function can therefore be called to sort this column.The color of the symbol is defined by the "meta" method defined in the list box itself.</source>          <target>The icon is in fact a Unicode character which is returned according to the gender. A sorting function can therefore be called to sort this column.The color of the symbol is defined by the "meta" method defined in the list box itself.</target>        </trans-unit>      </group>      <group resname="LABELS">        <trans-unit id="39E//SRck+nx9pHGe/JPhQ" resname="Fullname">          <source>Full name</source>          <target>Full name</target>        </trans-unit>        <trans-unit id="+uuMvvYxNd56/46wPuGrYA" resname="Birthday">          <source>Birthday</source>          <target>Birthday</target>        </trans-unit>        <trans-unit id="pQr84Nc9bVhY4xMW+1dXdw" resname="Age">          <source>Age</source>          <target>Age</target>        </trans-unit>        <trans-unit id="wVEcJxloy97J5bviKm2SbA" resname="Portrait">          <source>Portrait</source>          <target>Portrait</target>        </trans-unit>        <trans-unit id="WOwIyv+q519elBGbdOZAzQ" resname="Query">          <source>Query</source>          <target>Query</target>        </trans-unit>        <trans-unit id="cbnq0YwHVYAnftsDhWgz2g" resname="NameHiphen">          <source>Name:</source>          <target>Name:</target>        </trans-unit>        <trans-unit id="jfS5v3KGwNBGEvlo0yIDKg" resname="AgeHiphen">          <source>Age:</source>          <target>Age:</target>        </trans-unit>        <trans-unit id="bJffq+AjEWATVWvkvj8v7w" resname="FullAddress">          <source>Full address</source>          <target>Full address</target>        </trans-unit>        <trans-unit id="vPF5gDJe9uBAhYh8wJkZng" resname="GrandParents">          <source>Grand parents</source>          <target>Grand parents</target>        </trans-unit>        <trans-unit id="8X8RZNS5Pd18OQHuZgX3ZQ" resname="Parents">          <source>Parents</source>          <target>Parents</target>        </trans-unit>        <trans-unit id="dM6nZ2Zuu8tpfcyUw1SHiQ" resname="Children">          <source>Children</source>          <target>Children</target>        </trans-unit>        <trans-unit id="owecHBuo9vrHvCR7/p9alQ" resname="UnclesAndAunts">          <source>Uncles and aunts</source>          <target>Uncles and aunts</target>        </trans-unit>        <trans-unit id="rS8PIzVKK1h01p1+gKIa5Q" resname="Siblings">          <source>Siblings</source>          <target>Siblings</target>        </trans-unit>        <trans-unit id="If+auhAvXt1WmGKELDBcrQ" resname="Cousins">          <source>Cousins</source>          <target>Cousins</target>        </trans-unit>        <trans-unit id="BvbnmKE1kmrdqHyT6RiPQw" resname="HideHelp">          <source>Hide help</source>          <target>Hide help</target>        </trans-unit>        <trans-unit id="unXS0BBpkHgHujpC95Dr7g" resname="EditCode">          <source>Edit code</source>          <target>Edit code</target>        </trans-unit>      </group>      <group resname="INTRO">        <trans-unit id="Jwl+5E3J5KpHXyOAyh8keg" resname="HowTo">          <source>This database demonstrates how to:- Use classes with computed attributes,- Manage sorts and queries that use these computed attributes.</source>          <target>This database demonstrates how to:- Use classes with computed attributes,- Manage sorts and queries that use these computed attributes.</target>        </trans-unit>        <trans-unit id="ElMhN71Th0YgnWX0xHo/Dw" resname="DBinfo">          <source>This database contains &lt;1&gt; records.</source>          <target>This database contains &lt;1&gt; records.</target>        </trans-unit>        <trans-unit id="nJ5NaGPfrNtxlLgx4z5EEw" resname="GnerateMoreData">          <source>Generate more data…</source>          <target>Generate more data…</target>        </trans-unit>        <trans-unit id="FtpJutm6Pw56ilqBlByZhA" resname="HowMany">          <source>How many people would you like to generate ?</source>          <target>How many people would you like to generate ?</target>        </trans-unit>        <trans-unit id="YosVvfYwM0xG+BYDS1lvCw" resname="CalculatedAttributes">          <source>Computed attributes</source>          <target>Computed attributes</target>        </trans-unit>        <trans-unit id="PoFZDGd9BbMIpD3C4Xnzog" resname="PreviousEpisodes">          <source>(*) Previous episodes are still available here!</source>          <target>(*) Previous episodes are still available here!</target>        </trans-unit>      </group>    </body>  </file></xliff>